// Mia config: https://kdl.dev
// https://github.com/YaLTeR/niri/wiki/Configuration:-Overview

workspace "Net" {
   open-on-output "eDP-1"
}
workspace "Social"{
 open-on-output "HDMI-A-1"
}
workspace "Media"{
 open-on-output "HDMI-A-1"
}

hotkey-overlay {
    skip-at-startup
}
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
input {
    keyboard {
           track-layout "window"
        xkb {
           layout "it,ch"
           options "grp:caps_toggle,grp_led:scroll"
        }
    }
    touchpad {
        // off
        tap
        dwt
        // dwtp
        // natural-scroll
        accel-speed 0.9
        accel-profile "adaptive"
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }
    disable-power-key-handling
    warp-mouse-to-focus
    ///focus-follows-mouse max-scroll-amount="0%"
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
output "eDP-1" {
    //off
    scale 1.1
    position x=0 y=0
}
output "HDMI-A-1" {
    scale 1.0
}

    prefer-no-csd
// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    // Set gaps around windows in logical pixels.
    gaps 8

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //   or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //   together with the previously focused column.
    center-focused-column "on-overflow"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        proportion 0.75
        proportion 1.0
        proportion 0.6
        proportion 0.4
        // fixed 1920
    }

    // You can change the default width of the new windows.
    default-column-width {  }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        width 3000
        // Color of the ring on the active monitor.
        active-color "#00000055"
        // Color of the ring on inactive monitors.
        inactive-color "#00000055"
    }


    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        inactive-color "#00000090"
        width 2
        //active-gradient from="green" to="blue" angle=45 in="oklch longer hue"
        active-gradient from="#33ccffee" to="#00ff99ee" angle=45 relative-to="workspace-view"
        //inactive-gradient from="#50505070" to="#80808060" angle=45 relative-to="workspace-view"
    }
    struts {
        // left 64
        // right 64
        // top -64
        // bottom 64
    }
    shadow {
        on
        softness 40
        spread 5
        offset x=0 y=5
        draw-behind-window true
        color "#00000064"
        inactive-color "#00000034"
    }
}
    spawn-at-startup "sh" "-c" "lxqt-session && niri msg action quit -s"
    spawn-at-startup "sh" "-c" "wlsunset -l 44 -L 10 -t 4800"
    spawn-at-startup "hypridle"
    //spawn-at-startup "sh" "-c" "swayidle -w timeout 300 'niri msg action power-off-monitors'"
    //spawn-at-startup "sh" "-c" "systemctl --user start xdg-desktop-portal.service"
    //xwayland
    spawn-at-startup "xwayland-satellite"
    environment {
    DISPLAY ":0"
}

//screenshot-path "/tmp/NiriScreenshot-%d %H-%M-%S.png"

// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // off
    slowdown 0.8
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules
    window-rule {
    match is-active=false
    exclude app-id="phototonic"
    opacity 0.7
    draw-border-with-background true
    }
window-rule {
    match app-id=r#"^firefox$"#
    open-on-workspace "Net"
    open-maximized true
}
window-rule {
    match app-id=r#"^.*rss.*$"#
    open-on-workspace "Net"
    default-column-width { proportion 0.70; }
}
window-rule {
    match app-id=r#"^thunderbird$"#
    open-on-workspace "Social"
    default-column-width { proportion 0.70; }
}
window-rule {
    match app-id=r#"^org\.telegram\.desktop$"#
    match app-id=r#"^nheko$"#
    match app-id=r#"^Element$"#
    open-on-workspace "Social"
    default-column-width { fixed 1100; }
}

window-rule {
    match app-id="qps"
    match app-id="rednotebook"
    default-column-width { fixed 800; }
    max-height 600;
    min-height 600;
    open-floating true
}

window-rule {
    match app-id="rednotebook"
    default-column-width { fixed 1000; }
    max-height 700;
    min-height 700;
    open-floating true
}

window-rule {
    match app-id="featherpad"
//    match app-id="qterminal"
    open-on-workspace "Media"
    default-column-width { fixed 1200; }
}
window-rule {
    match app-id=r#"^.*Shotwell$"#
    match app-id=r#"^darktable$"#
    match app-id=r#"^strawberry$"#
    //match app-id=r#"^phototonic$"#
    open-on-workspace "Media"
    open-fullscreen true
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    match app-id=r#"^.*keepassxc.*$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    match app-id=r#"^lxqt-.*|.*qruler|pavu.*|.*copyq|qarma|.*portal-lxqt.*|cryptHider|meteo-qt.*|python3|.*conf$"#
    match title=r#"^Preferen.*|.*file.*|.*evento.*|edit.*|Crea.*|select.*|Cerca.*|Password.*|Duplica.*|Connetti.*|Chiudi.*|Propriet.*|Elimina.*|Close.*|Esegui.*|Monta.*|Selez.*$"#
    exclude app-id="lxqt-archiver"
    open-floating true
}
window-rule {
    geometry-corner-radius 8 8 8 8
    clip-to-geometry true
}
window-rule {
    // exclude dim inactive
    //match is-active=true
    // draw-border-with-background false UNNEEDED??
    match app-id="phototonic"
    match app-id="darktable"
    match app-id="shotwell"
    focus-ring { off
    }
}

layer-rule {
    match namespace="launcher"
    match namespace="notification"
    match namespace="dialog"
    shadow {
        on
    }
}

binds {
    //  To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    Mod+Shift+A { show-hotkey-overlay; }
    Mod+Return { spawn "qterminal"; }
    F12 { spawn "pcmanfm-qt" "/usr/share/applications/qterminal-drop.desktop" "-d"; }
    Alt+Space { spawn "lxqt-runner"; }
    Mod+P { spawn "pcmanfm-qt"; }
    Mod+K { spawn "pcmanfm-qt" "/usr/share/applications/org.keepassxc.KeePassXC.desktop"; }
    Mod+F { spawn "pcmanfm-qt" "/usr/share/applications/featherpad.desktop"; }
    Mod+S { spawn "pcmanfm-qt" "/usr/share/applications/org.gnome.Shotwell.desktop"; }
    Super+Alt+L { spawn "lxqt-leave"; }
    Ctrl+Alt+V { spawn "copyq" "show"; }
    Mod+X {expel-window-from-column; }
    Mod+N {spawn "translate"; }
    Mod+Z {spawn "wooz"; }
//screenrecording
    Mod+Print { spawn "sh" "-c" r#"
            file=/tmp/"screenrec-$(date +%s)".mp4
            wf-recorder -g "$(slurp -b '#00000090')" -f "$file"
            wl-copy file:/"$file" -t text/uri-list
        "#;
    }
    Mod+Shift+Print { spawn "killall" "-s" "SIGINT" "wf-recorder"; }
//++++++++++++++++
    Mod+Shift+1 {spawn "sh" "-c"  "niri msg outputs | grep -n2 eDP | grep -q Disabled && { echo off; niri msg output eDP-1 on; } || { echo on; niri msg output eDP-1 off; }";}
    Mod+Shift+2 {spawn "sh" "-c"  "niri msg outputs | grep -n2 HDMI | grep -q Disabled && { echo off; niri msg output HDMI-A-1 on; } || { echo on; niri msg output HDMI-A-1 off; }";}



    XF86AudioRaiseVolume allow-when-locked=true { spawn "amixer" "sset" "Master" "5%+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "amixer" "sset" "Master" "5%-"; }
    XF86AudioMute        allow-when-locked=true { spawn "amixer" "sset" "Master" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "amixer" "sset" "Mic" "toggle"; }
    //Brightness
    XF86MonBrightnessUp { spawn "lxqt-config-brightness" "-i"; }
    XF86MonBrightnessDown { spawn "lxqt-config-brightness" "-d"; }

    Mod+Q { close-window; }

    Mod+Left  { focus-column-left; }
    Alt+Tab  { focus-column-left; }
    Mod+Ctrl+Left  { focus-monitor-left; }
    Mod+Ctrl+Right  { focus-monitor-right; }

 //   Mod+Down  { focus-window-down; }
 //   Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Ctrl+Tab  { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
//    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }

    Mod+Shift+Left  { move-column-left; }
//    Mod+Ctrl+Down  { move-window-down; }
//    Mod+Ctrl+Up    { move-window-up; }
    Mod+Shift+Right { move-column-right; }


    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.

    // Mod+J     { focus-window-or-workspace-down; }
    // Mod+K     { focus-window-or-workspace-up; }
    // Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    // Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

 //   Ctrl+Shift+S { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Ctrl+Alt+Left  { move-column-to-monitor-left; }
    Ctrl+Alt+Right { move-column-to-monitor-right; }
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // And you can also move a whole workspace to another monitor:
    Mod+Alt+Left  { move-workspace-to-monitor-left; }
    Mod+Alt+Right  { move-workspace-to-monitor-right; }
    // ...

    Mod+Down           { focus-workspace-down; }
    Mod+Up             { focus-workspace-up; }
    Mod+Shift+Down      { move-column-to-workspace-down; }
    Mod+Shift+Up        { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "amixer" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "amixer" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    Mod+Shift+X { consume-or-expel-window-right; }
    Mod+SHift+Z { expel-window-from-column; }

    // There are also commands that consume or expel a single window to the side.
    // Mod+BracketLeft  { consume-or-expel-window-left; }
    // Mod+BracketRight { consume-or-expel-window-right; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { reset-window-height; }
    //Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+C { center-column; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Plus { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Plus { set-window-height "+10%"; }

    Mod+V       { toggle-window-floating; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    Ctrl+Print { screenshot; }
    Shift+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}
